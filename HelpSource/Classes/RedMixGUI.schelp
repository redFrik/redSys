CLASS:: RedMixGUI
SUMMARY:: gui for RedMixMono, RedMixStereo, RedMixStereoMono
CATEGORIES:: Red>redMix
RELATED:: Overviews/redMixOverview, Classes/RedMixMono, Classes/RedMixStereo, Classes/RedMixStereoMono, Classes/RedMatrixMixerGUI, Classes/RedMixerGUI

DESCRIPTION::
gui for redMix objects.

The GUI takes the following modifier keysâ€¦
TABLE::
## ctrl || releasing the 2d slider will reset it to 0
::

CLASSMETHODS::

METHOD:: new

ARGUMENT:: redMix
A red mix object ( link::Classes/RedMixMono::, link::Classes/RedMixStereo::, link::Classes/RedMixStereoMono:: )

ARGUMENT:: parent
A link::Classes/Window::, link::Classes/CompositeView:: or code::nil::.

ARGUMENT:: position
A link::Classes/Point:: or code::nil::.

INSTANCEMETHODS::

PRIVATE:: initRedMixGUI, prContainer

METHOD:: close
Close the window if open.

EXAMPLES::

CODE::
(
s.waitForBoot{
	a= RedMixStereo(20, 40, 0);
	b= Pbind(\degree, 0, \out, 20).play;
	c= Pbind(\degree, 4, \out, 40).play;
	g= RedMixGUI(a);
};
)

g.parent;
g.redMix==a;
g.redMix.mix= -0.9;
g.close;
a.free;
b.stop;
c.stop;

(
var w= Window("lkj", Rect(100, 200, 500, 500));
w.front;
w.view.decorator= FlowLayout(w.view.bounds, Point(10, 10), Point(10, 10));
a= RedMixStereo(20, 40, 0);
b= Pbind(\degree, 0, \out, 20).play;
c= Pbind(\degree, 4, \out, 40).play;
a.gui(w);
w.view.decorator.nextLine;
a.gui(w);
w.onClose= {a.free; b.stop; c.stop};
)

(
w= Window("hgf", Rect(100, 200, 500, 500));
w.front;
v= CompositeView(w, Rect(10, 10, 400, 400)).background_(Color.blue).decorator= FlowLayout(Rect(0, 0, 300, 300));
a= RedMixStereo(20, 40, 0);
b= Pbind(\degree, 0, \out, 20).play;
c= Pbind(\degree, 4, \out, 40).play;
a.gui(v);
v.decorator.nextLine;
a.gui(v);
w.onClose= {a.free; b.stop; c.stop};
)
::
