CLASS:: RedMixerChannelGUI
SUMMARY:: gui for RedMixerChannel
CATEGORIES:: Red>redMixer
RELATED:: Classes/RedMixerGUI, Classes/RedMixerChannel, Classes/RedEffectsRackGUI

DESCRIPTION::

An embeddable GUI for link::Classes/RedMixerChannel::. If no parent given then a new Window will be created.

CLASSMETHODS::

METHOD:: new

ARGUMENT:: redMixerChannel
A link::Classes/RedMixerChannel::.

ARGUMENT:: parent
A link::Classes/Window::, link::Classes/View:: or code::nil::.

ARGUMENT:: position
A link::Classes/Point::.

ARGUMENT:: name
A link::Classes/String:: displayed below the volume slider.

METHOD:: height
Set and get the default height.

METHOD:: numInserts
Set and get the default number of inserts (effect slots).

METHOD:: width
Set and get the default width.

INSTANCEMETHODS::

PRIVATE:: prContainer, initRedMixerChannelGUI

METHOD:: close
Close the window if open.

METHOD:: cmp
Deprecated. Use link::#-view:: instead.

METHOD:: parent
A link::Classes/Window:: or, if embedded, a link::Classes/View::.

METHOD:: redMixerChannel
The current link::Classes/RedMixerChannel:: instance.

METHOD:: text
Set the label for the channel. Visible near the bottom.

ARGUMENT:: str
A link::Classes/String::.

METHOD:: view
Return the top view.

METHOD:: views
Return a link::Classes/List:: of all relevant view items (not text or peak buttons).

EXAMPLES::

CODE::
a= RedMixerChannel(0);
b= Pbind(\pan, Pseq([-1, 1], inf), \dur, 0.5, \amp, 0.5).play;
c= RedMixerChannelGUI(a, name: "testing");
a.mute= 1
a.mute= 0
a.vol= -12
c.text= "a stereo channel"
a.free
c.close
b.stop

//--save and recall settings
a= RedMixerChannel(0);
b= {WhiteNoise.ar(0.1!2)}.play;
c= RedMixerChannelGUI(a, name: "testing");
a.eqHi= 1
a.hiGain= -20
a.eqLo= 1
a.loFreq= 200
a.loGain= -90
a.vol= -6
a.out= 1
a.store("~/Desktop/redMixerChannelGUI-test.txt".standardizePath)
a.free; b.free;
//recompile
s.boot;
b= {WhiteNoise.ar(0.1!2)}.play;
a= RedMixerChannel.restoreFile("~/Desktop/redMixerChannelGUI-test.txt".standardizePath);
a.init
a.vol  //should be -6
a.out  //should be 1
c= RedMixerChannelGUI(a, name: "testing");
a.out= 0
b.free
a.free
c.close

//--synchronized views
a= RedMixerChannel(0);
b= a.gui;  //shortcut
//changes are synced using SimpleController
c= a.gui(position: Point(10, 100));  //another gui from the same channel instance
RedMixerChannelGUI.height= 300;
RedMixerChannelGUI.width= 300;
RedMixerChannelGUI.numInserts= 4;
d= a.gui(position: Point(100, 200));
a.vol= -4;  //all GUIs should reflect this change
a.free; b.close; c.close; d.close;
::
