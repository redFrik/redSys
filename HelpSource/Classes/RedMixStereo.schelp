CLASS:: RedMixStereo
SUMMARY:: mix 2 stereo channels in stereo
CATEGORIES:: Red>redMix
RELATED:: Overviews/redMixOverview, Classes/RedMixMono, Classes/RedMixStereoMono, Classes/RedMatrixMixer, Classes/RedMixer

DESCRIPTION::
Simple mixer that take emphasis::two stereo:: sources, combines them and output to emphasis::one stereo::.

Can be used with or without link::Classes/RedMixGUI::.

CLASSMETHODS::

METHOD:: new

ARGUMENT:: inA
First emphasis::stereo:: audio input bus number.

ARGUMENT:: inB
Second emphasis::stereo:: audio input bus number.

ARGUMENT:: out
Stereo output bus number.

ARGUMENT:: group
code::nil:: boots the default server and uses the code::defaultGroup::. Adds to tail.

ARGUMENT:: lag
Ramp for mix controllers in seconds.

COPYMETHOD:: RedMixMono *def

INSTANCEMETHODS::

COPYMETHOD:: RedMixMono -amp
COPYMETHOD:: RedMixMono -cvs
COPYMETHOD:: RedMixMono -def
COPYMETHOD:: RedMixMono -free
COPYMETHOD:: RedMixMono -group
COPYMETHOD:: RedMixMono -gui
COPYMETHOD:: RedMixMono -inA
COPYMETHOD:: RedMixMono -inB
COPYMETHOD:: RedMixMono -isReady
COPYMETHOD:: RedMixMono -lag
COPYMETHOD:: RedMixMono -mix
COPYMETHOD:: RedMixMono -out

EXAMPLES::

CODE::
a= RedMixStereo(20, 40, 0);	//stereo inputs on 20 and 40, stereo output on 0
b= Pbind(\degree, Pseq([0, 1, 5, 4, 3], inf), \dur, 0.25, \pan, Pseq([-1, 1], inf), \out, 20).play;
c= Pbind(\degree, Pseq([10, 11, 16, 15], inf), \dur, 0.25, \pan, Pseq([-1, 1], inf), \out, 40).play;

a.mix= -0.9;
a.mix= 0.9;
a.lag= 2;
a.mix= 0;
a.amp= 0.2;

g= a.gui;	//optional
g.close;

b.stop;
c.stop;
a.free;
::
