CLASS:: RedSmooth2
SUMMARY:: data filter with trend
CATEGORIES:: Red>redTools
RELATED:: Classes/RedSmoothUD, Classes/RedSmooth, Classes/RedSlide, Classes/RedInterpolator, Classes/RedTween

DESCRIPTION::
A simple class for filtering values. Double exponential smoothing.

CLASSMETHODS::

METHOD:: new

Create a new filter.

ARGUMENT:: factor
A link::Classes/Float::. Less is more.

ARGUMENT:: factor2
A link::Classes/Float::. Trend smoothing factor.

ARGUMENT:: initVal
Initial value.

DISCUSSION::
Note that a factor of CODE::0.0:: will 'freeze' the filter, and factors above CODE::1.0:: will be unstable - overshoot, ring and even start to oscillate.

INSTANCEMETHODS::

METHOD:: factor
How much smoothing.

METHOD:: factor2
How much smoothing of trend.

METHOD:: filter
Perform the smoothing.

METHOD:: val
Get or set the current value.

METHOD:: trend
Get or set the current trend.

EXAMPLES::

CODE::
a= RedSmooth2(0.05, 0.01);
a.filter(1.0.rand);  //run repeatedly - low pass filtered random data


//plot example
a= RedSmooth2(0.1, 0.1);
~squarewave= (0..1000).collect{|x| (x%200>100).binaryValue};
~smoothed= ~squarewave.collect{|x| a.filter(x)};
[~squarewave, ~smoothed].plot;


//plot example with trend
a= RedSmooth2(0.1, 0.1);
~squarewave= (0..1000).collect{|x| (x%200>100).binaryValue};
~squarewave.collect{|x| [x, a.filter(x), a.trend]}.flop.plot;


//gui example
(
var win= Window();
var flt= RedSmooth2(0.1, 0.1, 0.5);
var number, number2, slider, plot, fifo;
number= NumberBox(win, Rect(10, 10, 90, 20));
number.value= flt.factor;
number.decimals= 3;
number.action= {|view|
	view.value= view.value.max(0);
	flt.factor= view.value;
};
StaticText(win, Rect(110, 10, 40, 20)).string_("factor");
number2= NumberBox(win, Rect(170, 10, 90, 20));
number2.value= flt.factor2;
number2.decimals= 3;
number2.action= {|view|
	view.value= view.value.max(0);
	flt.factor2= view.value;
};
StaticText(win, Rect(270, 10, 75, 20)).string_("trend factor");
slider= Slider(win, Rect(10, 40, 20, 350));
slider.value= flt.val;
plot= MultiSliderView(win, Rect(40, 40, 350, 350));
plot.elasticMode= true;
CmdPeriod.doOnce({win.close});
win.front;
fifo= List.fill(100, flt.val);
Routine({
	inf.do{|i|
		fifo.pop;
		fifo.addFirst(flt.filter(slider.value));
		plot.value= fifo;
		"trend %".format(flt.trend.round(0.0001)).postln;
		(1/50).wait;
	};
}).play(AppClock);
)
::
